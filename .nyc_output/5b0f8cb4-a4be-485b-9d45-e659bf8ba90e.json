{"C:\\Users\\Brian\\Documents\\Andela\\GitHub\\TODO\\server\\tests\\simpleTest.js":{"path":"C:\\Users\\Brian\\Documents\\Andela\\GitHub\\TODO\\server\\tests\\simpleTest.js","statementMap":{"0":{"start":{"line":3,"column":12},"end":{"line":3,"column":51}},"1":{"start":{"line":5,"column":16},"end":{"line":5,"column":60}},"2":{"start":{"line":7,"column":13},"end":{"line":7,"column":56}},"3":{"start":{"line":9,"column":39},"end":{"line":9,"column":95}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":43}},"5":{"start":{"line":13,"column":13},"end":{"line":13,"column":38}},"6":{"start":{"line":15,"column":0},"end":{"line":25,"column":3}},"7":{"start":{"line":16,"column":2},"end":{"line":24,"column":5}},"8":{"start":{"line":17,"column":4},"end":{"line":23,"column":7}},"9":{"start":{"line":18,"column":6},"end":{"line":18,"column":55}},"10":{"start":{"line":20,"column":6},"end":{"line":20,"column":63}},"11":{"start":{"line":21,"column":6},"end":{"line":21,"column":47}},"12":{"start":{"line":22,"column":6},"end":{"line":22,"column":13}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":31}},"loc":{"start":{"line":9,"column":37},"end":{"line":9,"column":97}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":32},"end":{"line":15,"column":33}},"loc":{"start":{"line":15,"column":44},"end":{"line":25,"column":1}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":71},"end":{"line":16,"column":72}},"loc":{"start":{"line":16,"column":87},"end":{"line":24,"column":3}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":61},"end":{"line":17,"column":62}},"loc":{"start":{"line":17,"column":81},"end":{"line":23,"column":5}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":94}},"type":"cond-expr","locations":[{"start":{"line":9,"column":70},"end":{"line":9,"column":73}},{"start":{"line":9,"column":76},"end":{"line":9,"column":94}}],"line":9},"1":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":67}},"type":"binary-expr","locations":[{"start":{"line":9,"column":46},"end":{"line":9,"column":49}},{"start":{"line":9,"column":53},"end":{"line":9,"column":67}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":3,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1},"f":{"0":3,"1":1,"2":1,"3":1},"b":{"0":[1,2],"1":[3,3]},"inputSourceMap":{"version":3,"sources":["simpleTest.js"],"names":["chai","use","chaiHttp","should","describe","it","done","request","server","get","end","err","res","expect","to","have","status","body","property","that","equals"],"mappings":";;AAAA;;AACA;;AACA;;;;AACAA,iBAAKC,GAAL,CAASC,oBAAT;;AACA,IAAMC,MAAM,GAAGH,iBAAKG,MAAL,EAAf;;AAEAC,QAAQ,CAAC,qBAAD,EAAwB,YAAM;AAClCC,EAAAA,EAAE,CAAC,gEAAD,EAAmE,UAACC,IAAD,EAAU;AAC3EN,qBAAKO,OAAL,CAAaC,iBAAb,EACKC,GADL,CACS,GADT,EAEKC,GAFL,CAES,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfZ,uBAAKa,MAAL,CAAYD,GAAZ,EAAiBE,EAAjB,CAAoBC,IAApB,CAAyBC,MAAzB,CAAgC,GAAhC;;AACAJ,MAAAA,GAAG,CAACK,IAAJ,CAASd,MAAT,CAAgBY,IAAhB,CAAqBG,QAArB,CAA8B,QAA9B,EAAwCC,IAAxC,CAA6CC,MAA7C,CAAoD,GAApD;AACAR,MAAAA,GAAG,CAACK,IAAJ,CAASd,MAAT,CAAgBY,IAAhB,CAAqBG,QAArB,CAA8B,SAA9B;AACAZ,MAAAA,IAAI;AACP,KAPL;AAQH,GATC,CAAF;AAUH,CAXO,CAAR","sourceRoot":"C:\\Users\\Brian\\Documents\\Andela\\GitHub\\TODO\\server\\tests","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport server from '../index';\r\nchai.use(chaiHttp)\r\nconst should = chai.should();\r\n\r\ndescribe('/GET to the server ', () => {\r\n    it('should return the JSON file indicating that the app is working', (done) => {\r\n        chai.request(server)\r\n            .get('/')\r\n            .end((err, res) => {\r\n                chai.expect(res).to.have.status(200);\r\n                res.body.should.have.property('status').that.equals(200);\r\n                res.body.should.have.property('message');\r\n                done();\r\n            });\r\n    });\r\n})\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6372c39da9fd9b2fd19da26442bb378d7b400b4c","contentHash":"e2ba9d46f07f422bdaac9a09658dad634711a254808c9537706bca63bcca3512"},"C:\\Users\\Brian\\Documents\\Andela\\GitHub\\TODO\\server\\index.js":{"path":"C:\\Users\\Brian\\Documents\\Andela\\GitHub\\TODO\\server\\index.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"2":{"start":{"line":8,"column":15},"end":{"line":8,"column":57}},"3":{"start":{"line":10,"column":14},"end":{"line":10,"column":31}},"4":{"start":{"line":12,"column":14},"end":{"line":12,"column":40}},"5":{"start":{"line":14,"column":17},"end":{"line":14,"column":70}},"6":{"start":{"line":16,"column":39},"end":{"line":16,"column":95}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":32}},"8":{"start":{"line":20,"column":0},"end":{"line":20,"column":22}},"9":{"start":{"line":21,"column":10},"end":{"line":21,"column":36}},"10":{"start":{"line":22,"column":11},"end":{"line":22,"column":35}},"11":{"start":{"line":23,"column":0},"end":{"line":25,"column":4}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":36}},"13":{"start":{"line":27,"column":0},"end":{"line":32,"column":3}},"14":{"start":{"line":28,"column":2},"end":{"line":31,"column":5}},"15":{"start":{"line":33,"column":0},"end":{"line":36,"column":3}},"16":{"start":{"line":34,"column":2},"end":{"line":34,"column":29}},"17":{"start":{"line":35,"column":2},"end":{"line":35,"column":63}},"18":{"start":{"line":37,"column":15},"end":{"line":37,"column":18}},"19":{"start":{"line":38,"column":0},"end":{"line":38,"column":30}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":31}},"loc":{"start":{"line":16,"column":37},"end":{"line":16,"column":97}},"line":16},"1":{"name":"(anonymous_1)","decl":{"start":{"line":27,"column":13},"end":{"line":27,"column":14}},"loc":{"start":{"line":27,"column":33},"end":{"line":32,"column":1}},"line":27},"2":{"name":"(anonymous_2)","decl":{"start":{"line":33,"column":17},"end":{"line":33,"column":18}},"loc":{"start":{"line":33,"column":29},"end":{"line":36,"column":1}},"line":33}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":46},"end":{"line":16,"column":94}},"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":94}}],"line":16},"1":{"loc":{"start":{"line":16,"column":46},"end":{"line":16,"column":67}},"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}],"line":16},"2":{"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":35}},"type":"binary-expr","locations":[{"start":{"line":22,"column":11},"end":{"line":22,"column":27}},{"start":{"line":22,"column":31},"end":{"line":22,"column":35}}],"line":22}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1},"f":{"0":2,"1":1,"2":1},"b":{"0":[1,1],"1":[2,2],"2":[1,0]},"inputSourceMap":{"version":3,"sources":["index.js"],"names":["client","connect","app","PORT","process","env","use","express","urlencoded","extended","json","get","req","res","status","send","message","listen","console","log"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AACAA,sBAAOC,OAAP;;AACA;AACA,IAAMC,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAEC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAhC;AACAD,GAAG,CAACI,GAAJ,CAAQC,oBAAQC,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAP,GAAG,CAACI,GAAJ,CAAQC,oBAAQG,IAAR,EAAR;AAEAR,GAAG,CAACS,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CACI;AACID,IAAAA,MAAM,EAAG,GADb;AAEIE,IAAAA,OAAO,EAAG;AAFd,GADJ;AAMH,CAPD;AASAd,GAAG,CAACe,MAAJ,CAAWd,IAAX,EAAiB,YAAK;AAClB;AACAe,EAAAA,OAAO,CAACC,GAAR,sCAA0ChB,IAA1C;AACH,CAHD;eAIeD,G","sourceRoot":"C:\\Users\\Brian\\Documents\\Andela\\GitHub\\TODO\\server","sourcesContent":["import express from 'express';\r\nimport { config } from \"dotenv\";\r\nimport { createTable } from \"./config/tables\";\r\nimport client from './config/dbconnect'\r\nclient.connect();\r\nconfig();\r\nconst app = express();\r\nconst PORT= process.env.PORT || 5000;\r\napp.use(express.urlencoded({ extended: true }));\r\napp.use(express.json());\r\n\r\napp.get('/', (req, res) => {\r\n    res.status(200).send(\r\n        {\r\n            status : 200 ,\r\n            message : \"the todo app is working\"\r\n        }\r\n    )\r\n});\r\n\r\napp.listen(PORT, () =>{\r\n    createTable();\r\n    console.log(`TODO app listening on port ${PORT}!`);\r\n});\r\nexport default app;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d2e427c15d3ffab055808a5c3f50d238db5bfc8b","contentHash":"5d3c66bc4ee3992bdb9b95d7fe6bc80cb9a0b38a77a54b67f522125173092bae"},"C:\\Users\\Brian\\Documents\\Andela\\GitHub\\TODO\\server\\config\\tables.js":{"path":"C:\\Users\\Brian\\Documents\\Andela\\GitHub\\TODO\\server\\config\\tables.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"2":{"start":{"line":8,"column":17},"end":{"line":8,"column":63}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":95}},"4":{"start":{"line":12,"column":18},"end":{"line":16,"column":1}},"5":{"start":{"line":13,"column":2},"end":{"line":13,"column":312}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":428}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":34}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":97}},"line":10},"1":{"name":"createTable","decl":{"start":{"line":12,"column":27},"end":{"line":12,"column":38}},"loc":{"start":{"line":12,"column":41},"end":{"line":16,"column":1}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":94}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":94}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{"0":1,"1":1},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["tables.js"],"names":["createTable","client","query"],"mappings":";;;;;;;AAAA;;;;AAEO,IAAMA,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC7BC,wBAAOC,KAAP;;AASAD,wBAAOC,KAAP;AAaH,CAvBM","sourceRoot":"C:\\Users\\Brian\\Documents\\Andela\\GitHub\\TODO\\server\\config","sourcesContent":["import client from \"./dbconnect\";\r\n\r\nexport const createTable = () => {\r\n    client.query(`\r\n            CREATE TABLE IF NOT EXISTS users (\r\n            id serial PRIMARY KEY,\r\n            email varchar(30)  NOT NULL UNIQUE,\r\n            names varchar(25)  NOT NULL,\r\n            password varchar(10000)  NOT NULL,\r\n            createdon date NOT NULL\r\n        );\r\n    `);\r\n    client.query(`\r\n        CREATE TABLE IF NOT EXISTS tasks(\r\n        id SERIAL PRIMARY KEY,\r\n        title VARCHAR(25) NOT NULL UNIQUE,\r\n        description VARCHAR(5000) NOT NULL UNIQUE,\r\n        scope VARCHAR(25) NOT NULL UNIQUE,\r\n        status VARCHAR(10) NOT NULL,\r\n        ownerid integer,\r\n        assigneeid integer,\r\n        createdon date NOT NULL,\r\n        modifiedon date NOT NULL\r\n        );\r\n    `);\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8781b356f8082c584f120599b18a52b07afcde29","contentHash":"c910135be20b7d804b0ed5af8ef04c198f9f455ebcb7a9adfaca6a921a125451"},"C:\\Users\\Brian\\Documents\\Andela\\GitHub\\TODO\\server\\config\\dbconnect.js":{"path":"C:\\Users\\Brian\\Documents\\Andela\\GitHub\\TODO\\server\\config\\dbconnect.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"2":{"start":{"line":8,"column":10},"end":{"line":8,"column":23}},"3":{"start":{"line":10,"column":14},"end":{"line":10,"column":31}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":22}},"5":{"start":{"line":13,"column":13},"end":{"line":18,"column":2}},"6":{"start":{"line":19,"column":15},"end":{"line":19,"column":21}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["dbconnect.js"],"names":["client","Client","connectionString","process","env","DATABASE_URL","ssl","rejectUnauthorized"],"mappings":";;;;;;;AAAA;;AACA;;AACA;AAEA,IAAMA,MAAM,GAAG,IAAIC,UAAJ,CAAW;AACxBC,EAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC,YADN;AAExBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,kBAAkB,EAAE;AADjB;AAFmB,CAAX,CAAf;eAMeP,M","sourceRoot":"C:\\Users\\Brian\\Documents\\Andela\\GitHub\\TODO\\server\\config","sourcesContent":["import { Client } from 'pg';\r\nimport { config } from 'dotenv';\r\nconfig();\r\n\r\nconst client = new Client({\r\n  connectionString: process.env.DATABASE_URL,\r\n  ssl: {\r\n    rejectUnauthorized: false\r\n  }\r\n});\r\nexport default client;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"96f3fdf7b3e59584a466b4d43120b76f6c34da13","contentHash":"d6c1db94449f10c0b45ad75d10d87cce51a69fb6383a1a2c43d1e51e07c66b0b"}}